name: Deploy Pipeline
on:
  push:
    branches: [ "main" ]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - run: make lint
  test:
    needs: lint
    runs-on: ubuntu-latest
    env:
      API_SECRET: dRgUkXp2s5v8x/A?D(G+KbPeShVmYq3t
      TEST_DB_HOST: localhost
      TEST_DB_USER: user
      TEST_DB_PASSWORD: password
      TEST_DB_NAME: maintenance_api_test
      TEST_DB_PORT: 3306
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - run: make test
  bump-version:
    needs: test
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '0'
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.61.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_BRANCHES: main
        PRERELEASE: true
        WITH_V: true
  build:
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push api
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: vitorbiten/maintenance-api:${{github.ref_name}}
          cache-from: type=registry,ref=user/app:${{github.ref_name}}
          cache-to: type=inline
      - name: Build and push worker
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.worker
          push: true
          tags: vitorbiten/maintenance-worker:${{github.ref_name}}
          cache-from: type=registry,ref=user/app:${{github.ref_name}}
          cache-to: type=inline
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Kubernetes set context
        uses: Azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
      - name: Kubernetes apply
        run: |
          sed -i'' -e 's,/maintenance-api,/maintenance-api:${{github.ref_name}},g' ./kubernetes/api.yaml
          kubectl apply -f ./kubernetes/api.yaml
          sed -i'' -e 's,/maintenance-worker,/maintenance-worker:${{github.ref_name}},g' ./kubernetes/worker.yaml
          kubectl apply -f ./kubernetes/worker.yaml
